{"version":3,"file":"coursegoals.min.js","sources":["../src/coursegoals.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport * as Notification from 'core/notification';\n\nconst SELECTORS = {\n    COURSEGOALS_TAB_ID: '#cg_goals_tab',\n    DETAILS_ID: 'cg_details_maintab',\n    TASK_CHECKBOX_CLASS: '.cg-taskcb',\n    TASK_DETAILS_ACTIVE: 'data-td-active',\n};\n\nexport const initCourseGoalsTab = (parentelement, appendorder = 'last') => {\n    try {\n        /* Move the widget to the header area */\n        let cg_tab = document.querySelector(SELECTORS.COURSEGOALS_TAB_ID);\n        let cg_parentnodes = parentelement.split(',');\n        for (let i in cg_parentnodes) {\n            let cg_pageheader = document.querySelector(cg_parentnodes[i]);\n            if (cg_pageheader) {\n                if (appendorder === 'first') {\n                    cg_pageheader.prepend(cg_tab);\n                } else if (appendorder === 'last') {\n                    cg_pageheader.appendChild(cg_tab);\n                } else {\n                    cg_pageheader.appendChild(cg_tab);\n                }\n                break;\n            }\n        }\n\n        let cg_details_id = SELECTORS.DETAILS_ID;\n        let cg_details_node = document.getElementById(cg_details_id);\n\n        let cg_localDetailsAreOpen = window.localStorage.getItem(\"details-\" + cg_details_id);\n        if (cg_localDetailsAreOpen == \"true\" || cg_localDetailsAreOpen == null) {\n            cg_details_node.setAttribute(\"open\", \"true\");\n        }\n\n        cg_tab.style.display = \"block\"; // show tab after it is ready\n\n        cg_details_node.addEventListener(\"toggle\", function(e){\n            let isOpen = event.target.getAttribute(\"open\");\n            window.localStorage.setItem(\"details-\" + cg_details_id, typeof(isOpen) === \"string\" ? \"true\" : \"false\");\n        });\n\n        let taskCheckboxDivs = document.querySelectorAll(SELECTORS.TASK_CHECKBOX_CLASS);\n        taskCheckboxDivs.forEach((cbdiv) => {\n            let taskdetailsdiv = document.querySelector('[data-taskref=\"'+cbdiv.dataset.taskid+'\"]');\n            cbdiv.addEventListener('mouseenter', function(e) {\n                let activetaskdetails = document.querySelector('['+SELECTORS.TASK_DETAILS_ACTIVE+'=\"active\"]');\n                if (activetaskdetails) {\n                    activetaskdetails.style.display = 'none';\n                    activetaskdetails.removeAttribute(SELECTORS.TASK_DETAILS_ACTIVE);\n                }\n                taskdetailsdiv.style.display = 'block';\n                taskdetailsdiv.setAttribute(SELECTORS.TASK_DETAILS_ACTIVE, 'active')\n            });\n\n            // cbdiv.addEventListener('mouseleave', function(e) {\n            //     taskdetailsdiv.style.display = 'none';\n            // });\n        });\n    }\n    catch (ignore) {}\n};\n\nexport const setupTaskModalForm = (elementSelector, formClass) => {\n    const elements = document.querySelectorAll(elementSelector);\n    elements.forEach((element) => {\n        element.addEventListener('click', function (e) {\n            e.preventDefault();\n            let action = e.target.getAttribute('data-action');\n            let title = this.getAttribute('data-title') || this.innerHTML;\n            let coursegoalid = this.getAttribute('data-coursegoalid');\n            let taskid = this.getAttribute('data-taskid');\n\n            const form = new ModalForm({\n                formClass,\n                args: {\n                    taskid: taskid,\n                    coursegoalid: coursegoalid,\n                    action: action,\n                },\n                modalConfig: {\n                    title: title,\n                    large: true,\n                },\n                saveButtonText: title,\n                returnFocus: e.target,\n            });\n            form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                if (event.detail.result) {\n                    if (event.detail.returnaction) {\n                        // todo\n                    }\n                    if (event.detail.redirecturl) {\n                        document.location = event.detail.redirecturl;\n                    } else {\n                        window.location.reload();\n                    }\n                } else {\n                    Notification.addNotification({\n                        type: 'error',\n                        message: event.detail.errors.join('<br>')\n                    });\n                }\n            });\n            form.show();\n        })\n    });\n};\n\nexport const setupModals = (modals) => {\n    modals.forEach((modaldata) => {\n        console.log('setupModalsDeprecated, '+ modaldata.elementSelector);\n        let elements = document.querySelectorAll(modaldata.elementSelector);\n        elements.forEach((element) => {\n            element.addEventListener('click', function (e) {\n                let title = this.getAttribute('data-title') || this.innerHTML;\n                let formClass = modaldata.formClass;\n                let dataID = this.getAttribute('data-id') || null;\n                let dataParentID = this.getAttribute('data-parentid') || null;\n                let action = this.getAttribute('data-action') || null;\n                let form = new ModalForm({\n                    formClass,\n                    args: {\n                        action: action,\n                        dataid: dataID,\n                        dataparentid: dataParentID,\n                    },\n                    modalConfig: {\n                        title: title,\n                        large: true,\n                    },\n                    saveButtonText: title,\n                    returnFocus: e.target,\n                });\n                form.addEventListener(form.events.FORM_SUBMITTED, (event) => {\n                    if (event.detail.result) {\n                        if (event.detail.returnaction) {\n                            // todo\n                        }\n                        if (event.detail.redirecturl) {\n                            document.location = event.detail.redirecturl;\n                        } else {\n                            window.location.reload();\n                        }\n                    } else {\n                        Notification.addNotification({\n                            type: 'error',\n                            message: event.detail.errors.join('<br>')\n                        });\n                    }\n                });\n                form.show();\n            });\n        });\n    });\n};\n\n"],"names":["_modalform","Notification","_interopRequireWildcard","SELECTORS","parentelement","appendorder","cg_tab","document","querySelector","cg_parentnodes","split","i","cg_pageheader","prepend","appendChild","cg_details_id","cg_details_node","getElementById","cg_localDetailsAreOpen","window","localStorage","getItem","setAttribute","style","display","addEventListener","e","isOpen","event","target","getAttribute","setItem","querySelectorAll","forEach","cbdiv","taskdetailsdiv","dataset","taskid","activetaskdetails","removeAttribute","ignore","elementSelector","formClass","element","preventDefault","action","title","this","innerHTML","coursegoalid","form","ModalForm","args","modalConfig","large","saveButtonText","returnFocus","events","FORM_SUBMITTED","detail","result","returnaction","redirecturl","location","reload","addNotification","type","message","errors","join","show","modals","modaldata","console","log","dataID","dataParentID","dataid","dataparentid"],"mappings":"00BAAAA,gBAAAA,8CAEAC,4pBAAAC,CAAAD,cAEA,IAAME,6BACkB,gBADlBA,qBAEU,qBAFVA,8BAGmB,aAHnBA,8BAImB,6CAGS,SAACC,eAAeC,IAAAA,mEAAc,OACxD,IAEIC,IAAAA,OAASC,SAASC,cAAcL,8BAChCM,eAAiBL,cAAcM,MAAM,KACzC,IAAK,IAAIC,KAAKF,eAAgB,CACtBG,IAAAA,cAAgBL,SAASC,cAAcC,eAAeE,IAC1D,GAAIC,cAAe,CACK,UAAhBP,YACAO,cAAcC,QAAQP,QAEtBM,cAAcE,YAAYR,QAI9B,KACH,CACJ,CAED,IAAIS,cAAgBZ,qBAChBa,gBAAkBT,SAASU,eAAeF,eAE1CG,uBAAyBC,OAAOC,aAAaC,QAAQ,WAAaN,eACxC,QAA1BG,wBAA8D,MAA1BA,wBACpCF,gBAAgBM,aAAa,OAAQ,QAGzChB,OAAOiB,MAAMC,QAAU,QAEvBR,gBAAgBS,iBAAiB,UAAU,SAASC,GAC5CC,IAAAA,OAASC,MAAMC,OAAOC,aAAa,QACvCX,OAAOC,aAAaW,QAAQ,WAAahB,cAAkC,iBAAZY,OAAuB,OAAS,QAClG,IAEsBpB,SAASyB,iBAAiB7B,+BAChC8B,SAAQ,SAACC,OACtB,IAAIC,eAAiB5B,SAASC,cAAc,kBAAkB0B,MAAME,QAAQC,OAAO,MACnFH,MAAMT,iBAAiB,cAAc,SAASC,GAC1C,IAAIY,kBAAoB/B,SAASC,cAAc,IAAIL,8BAA8B,cAC7EmC,oBACAA,kBAAkBf,MAAMC,QAAU,OAClCc,kBAAkBC,gBAAgBpC,gCAEtCgC,eAAeZ,MAAMC,QAAU,QAC/BW,eAAeb,aAAanB,8BAA+B,SAC9D,GAKJ,GACJ,CACD,MAAOqC,QAAU,CACpB,8BAEiC,SAACC,gBAAiBC,WAC/BnC,SAASyB,iBAAiBS,iBAClCR,SAAQ,SAACU,SACdA,QAAQlB,iBAAiB,SAAS,SAAUC,GACxCA,EAAEkB,iBACEC,IAAAA,OAASnB,EAAEG,OAAOC,aAAa,eAC/BgB,MAAQC,KAAKjB,aAAa,eAAiBiB,KAAKC,UAChDC,aAAeF,KAAKjB,aAAa,qBACjCO,OAASU,KAAKjB,aAAa,eAEzBoB,KAAO,IAAIC,WAAAA,QAAU,CACvBT,UAAAA,UACAU,KAAM,CACFf,OAAQA,OACRY,aAAcA,aACdJ,OAAQA,QAEZQ,YAAa,CACTP,MAAOA,MACPQ,OAAO,GAEXC,eAAgBT,MAChBU,YAAa9B,EAAEG,SAEnBqB,KAAKzB,iBAAiByB,KAAKO,OAAOC,gBAAgB,SAAC9B,OAC3CA,MAAM+B,OAAOC,QACThC,MAAM+B,OAAOE,aAGbjC,MAAM+B,OAAOG,YACbvD,SAASwD,SAAWnC,MAAM+B,OAAOG,YAEjC3C,OAAO4C,SAASC,UAGpB/D,aAAagE,gBAAgB,CACzBC,KAAM,QACNC,QAASvC,MAAM+B,OAAOS,OAAOC,KAAK,SAG7C,IACDnB,KAAKoB,MACR,GACJ,GACJ,uBAE0B,SAACC,QACxBA,OAAOtC,SAAQ,SAACuC,WACZC,QAAQC,IAAI,0BAA2BF,UAAU/B,iBAClClC,SAASyB,iBAAiBwC,UAAU/B,iBAC1CR,SAAQ,SAACU,SACdA,QAAQlB,iBAAiB,SAAS,SAAUC,GACpCoB,IAAAA,MAAQC,KAAKjB,aAAa,eAAiBiB,KAAKC,UAChDN,UAAY8B,UAAU9B,UACtBiC,OAAS5B,KAAKjB,aAAa,YAAc,KACzC8C,aAAe7B,KAAKjB,aAAa,kBAAoB,KACrDe,OAASE,KAAKjB,aAAa,gBAAkB,KAC7CoB,KAAO,IAAIC,WAAAA,QAAU,CACrBT,UAAAA,UACAU,KAAM,CACFP,OAAQA,OACRgC,OAAQF,OACRG,aAAcF,cAElBvB,YAAa,CACTP,MAAOA,MACPQ,OAAO,GAEXC,eAAgBT,MAChBU,YAAa9B,EAAEG,SAEnBqB,KAAKzB,iBAAiByB,KAAKO,OAAOC,gBAAgB,SAAC9B,OAC3CA,MAAM+B,OAAOC,QACThC,MAAM+B,OAAOE,aAGbjC,MAAM+B,OAAOG,YACbvD,SAASwD,SAAWnC,MAAM+B,OAAOG,YAEjC3C,OAAO4C,SAASC,UAGpB/D,aAAagE,gBAAgB,CACzBC,KAAM,QACNC,QAASvC,MAAM+B,OAAOS,OAAOC,KAAK,SAG7C,IACDnB,KAAKoB,MACR,GACJ,GACJ,GACJ"}